//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAS_Presentacion.ServicioLibros {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LibroEntidad", Namespace="http://schemas.datacontract.org/2004/07/DAS_Entidades")]
    [System.SerializableAttribute()]
    public partial class LibroEntidad : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AUTOR_LIBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DISPONIBILIDADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDITORIAL_LIBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ESTANTERIAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FECHA_EDI_LIBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FEC_ING_SISField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FILAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ID_LIBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NUM_EDI_LIBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TITULO_LIBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USU_ING_LIBROField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AUTOR_LIB {
            get {
                return this.AUTOR_LIBField;
            }
            set {
                if ((object.ReferenceEquals(this.AUTOR_LIBField, value) != true)) {
                    this.AUTOR_LIBField = value;
                    this.RaisePropertyChanged("AUTOR_LIB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DISPONIBILIDAD {
            get {
                return this.DISPONIBILIDADField;
            }
            set {
                if ((object.ReferenceEquals(this.DISPONIBILIDADField, value) != true)) {
                    this.DISPONIBILIDADField = value;
                    this.RaisePropertyChanged("DISPONIBILIDAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITORIAL_LIB {
            get {
                return this.EDITORIAL_LIBField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITORIAL_LIBField, value) != true)) {
                    this.EDITORIAL_LIBField = value;
                    this.RaisePropertyChanged("EDITORIAL_LIB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ESTANTERIA {
            get {
                return this.ESTANTERIAField;
            }
            set {
                if ((object.ReferenceEquals(this.ESTANTERIAField, value) != true)) {
                    this.ESTANTERIAField = value;
                    this.RaisePropertyChanged("ESTANTERIA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FECHA_EDI_LIB {
            get {
                return this.FECHA_EDI_LIBField;
            }
            set {
                if ((this.FECHA_EDI_LIBField.Equals(value) != true)) {
                    this.FECHA_EDI_LIBField = value;
                    this.RaisePropertyChanged("FECHA_EDI_LIB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FEC_ING_SIS {
            get {
                return this.FEC_ING_SISField;
            }
            set {
                if ((this.FEC_ING_SISField.Equals(value) != true)) {
                    this.FEC_ING_SISField = value;
                    this.RaisePropertyChanged("FEC_ING_SIS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FILA {
            get {
                return this.FILAField;
            }
            set {
                if ((object.ReferenceEquals(this.FILAField, value) != true)) {
                    this.FILAField = value;
                    this.RaisePropertyChanged("FILA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID_LIB {
            get {
                return this.ID_LIBField;
            }
            set {
                if ((object.ReferenceEquals(this.ID_LIBField, value) != true)) {
                    this.ID_LIBField = value;
                    this.RaisePropertyChanged("ID_LIB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NUM_EDI_LIB {
            get {
                return this.NUM_EDI_LIBField;
            }
            set {
                if ((this.NUM_EDI_LIBField.Equals(value) != true)) {
                    this.NUM_EDI_LIBField = value;
                    this.RaisePropertyChanged("NUM_EDI_LIB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TITULO_LIB {
            get {
                return this.TITULO_LIBField;
            }
            set {
                if ((object.ReferenceEquals(this.TITULO_LIBField, value) != true)) {
                    this.TITULO_LIBField = value;
                    this.RaisePropertyChanged("TITULO_LIB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USU_ING_LIBRO {
            get {
                return this.USU_ING_LIBROField;
            }
            set {
                if ((object.ReferenceEquals(this.USU_ING_LIBROField, value) != true)) {
                    this.USU_ING_LIBROField = value;
                    this.RaisePropertyChanged("USU_ING_LIBRO");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioLibros.IServicioLibros")]
    public interface IServicioLibros {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/add", ReplyAction="http://tempuri.org/IServicioLibros/addResponse")]
        DAS_Presentacion.ServicioLibros.LibroEntidad add(DAS_Presentacion.ServicioLibros.LibroEntidad obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/add", ReplyAction="http://tempuri.org/IServicioLibros/addResponse")]
        System.Threading.Tasks.Task<DAS_Presentacion.ServicioLibros.LibroEntidad> addAsync(DAS_Presentacion.ServicioLibros.LibroEntidad obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/edit", ReplyAction="http://tempuri.org/IServicioLibros/editResponse")]
        bool edit(DAS_Presentacion.ServicioLibros.LibroEntidad obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/edit", ReplyAction="http://tempuri.org/IServicioLibros/editResponse")]
        System.Threading.Tasks.Task<bool> editAsync(DAS_Presentacion.ServicioLibros.LibroEntidad obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/delete", ReplyAction="http://tempuri.org/IServicioLibros/deleteResponse")]
        bool delete(DAS_Presentacion.ServicioLibros.LibroEntidad obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/delete", ReplyAction="http://tempuri.org/IServicioLibros/deleteResponse")]
        System.Threading.Tasks.Task<bool> deleteAsync(DAS_Presentacion.ServicioLibros.LibroEntidad obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/ObtenerLibroID", ReplyAction="http://tempuri.org/IServicioLibros/ObtenerLibroIDResponse")]
        DAS_Presentacion.ServicioLibros.LibroEntidad ObtenerLibroID(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/ObtenerLibroID", ReplyAction="http://tempuri.org/IServicioLibros/ObtenerLibroIDResponse")]
        System.Threading.Tasks.Task<DAS_Presentacion.ServicioLibros.LibroEntidad> ObtenerLibroIDAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/buscar", ReplyAction="http://tempuri.org/IServicioLibros/buscarResponse")]
        DAS_Presentacion.ServicioLibros.LibroEntidad[] buscar(string busqueda, int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/buscar", ReplyAction="http://tempuri.org/IServicioLibros/buscarResponse")]
        System.Threading.Tasks.Task<DAS_Presentacion.ServicioLibros.LibroEntidad[]> buscarAsync(string busqueda, int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/existe", ReplyAction="http://tempuri.org/IServicioLibros/existeResponse")]
        bool existe(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/existe", ReplyAction="http://tempuri.org/IServicioLibros/existeResponse")]
        System.Threading.Tasks.Task<bool> existeAsync(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/updateStateDisponilbe", ReplyAction="http://tempuri.org/IServicioLibros/updateStateDisponilbeResponse")]
        bool updateStateDisponilbe(string IDlibro, int option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/updateStateDisponilbe", ReplyAction="http://tempuri.org/IServicioLibros/updateStateDisponilbeResponse")]
        System.Threading.Tasks.Task<bool> updateStateDisponilbeAsync(string IDlibro, int option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/ObtenerLibros", ReplyAction="http://tempuri.org/IServicioLibros/ObtenerLibrosResponse")]
        DAS_Presentacion.ServicioLibros.LibroEntidad[] ObtenerLibros();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioLibros/ObtenerLibros", ReplyAction="http://tempuri.org/IServicioLibros/ObtenerLibrosResponse")]
        System.Threading.Tasks.Task<DAS_Presentacion.ServicioLibros.LibroEntidad[]> ObtenerLibrosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioLibrosChannel : DAS_Presentacion.ServicioLibros.IServicioLibros, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioLibrosClient : System.ServiceModel.ClientBase<DAS_Presentacion.ServicioLibros.IServicioLibros>, DAS_Presentacion.ServicioLibros.IServicioLibros {
        
        public ServicioLibrosClient() {
        }
        
        public ServicioLibrosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioLibrosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioLibrosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioLibrosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DAS_Presentacion.ServicioLibros.LibroEntidad add(DAS_Presentacion.ServicioLibros.LibroEntidad obj) {
            return base.Channel.add(obj);
        }
        
        public System.Threading.Tasks.Task<DAS_Presentacion.ServicioLibros.LibroEntidad> addAsync(DAS_Presentacion.ServicioLibros.LibroEntidad obj) {
            return base.Channel.addAsync(obj);
        }
        
        public bool edit(DAS_Presentacion.ServicioLibros.LibroEntidad obj) {
            return base.Channel.edit(obj);
        }
        
        public System.Threading.Tasks.Task<bool> editAsync(DAS_Presentacion.ServicioLibros.LibroEntidad obj) {
            return base.Channel.editAsync(obj);
        }
        
        public bool delete(DAS_Presentacion.ServicioLibros.LibroEntidad obj) {
            return base.Channel.delete(obj);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAsync(DAS_Presentacion.ServicioLibros.LibroEntidad obj) {
            return base.Channel.deleteAsync(obj);
        }
        
        public DAS_Presentacion.ServicioLibros.LibroEntidad ObtenerLibroID(string id) {
            return base.Channel.ObtenerLibroID(id);
        }
        
        public System.Threading.Tasks.Task<DAS_Presentacion.ServicioLibros.LibroEntidad> ObtenerLibroIDAsync(string id) {
            return base.Channel.ObtenerLibroIDAsync(id);
        }
        
        public DAS_Presentacion.ServicioLibros.LibroEntidad[] buscar(string busqueda, int value) {
            return base.Channel.buscar(busqueda, value);
        }
        
        public System.Threading.Tasks.Task<DAS_Presentacion.ServicioLibros.LibroEntidad[]> buscarAsync(string busqueda, int value) {
            return base.Channel.buscarAsync(busqueda, value);
        }
        
        public bool existe(string cedula) {
            return base.Channel.existe(cedula);
        }
        
        public System.Threading.Tasks.Task<bool> existeAsync(string cedula) {
            return base.Channel.existeAsync(cedula);
        }
        
        public bool updateStateDisponilbe(string IDlibro, int option) {
            return base.Channel.updateStateDisponilbe(IDlibro, option);
        }
        
        public System.Threading.Tasks.Task<bool> updateStateDisponilbeAsync(string IDlibro, int option) {
            return base.Channel.updateStateDisponilbeAsync(IDlibro, option);
        }
        
        public DAS_Presentacion.ServicioLibros.LibroEntidad[] ObtenerLibros() {
            return base.Channel.ObtenerLibros();
        }
        
        public System.Threading.Tasks.Task<DAS_Presentacion.ServicioLibros.LibroEntidad[]> ObtenerLibrosAsync() {
            return base.Channel.ObtenerLibrosAsync();
        }
    }
}
